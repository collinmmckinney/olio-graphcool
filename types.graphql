type User @model {
    # Required system field:
    id: ID! @isUnique # read-only (managed by Graphcool)

    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    email: String! @isUnique
    username: String!
    password: String!

    patient: Patient @relation(name: "PatientUser")
    caregiver: Caregiver @relation(name: "CaregiverUser")
    doctor: Doctor @relation(name: "DoctorUser")
    userType: UserType!
}

enum UserType {
    Patient,
    Caregiver,
    Doctor
}

type Patient @model {
    id: ID! @isUnique
    user: User! @relation(name: "PatientUser")
    reports: [Report!]! @relation(name: "PatientReport")
}

type Caregiver @model {
    id: ID! @isUnique
    user: User! @relation(name: "CaregiverUser")
}

type Doctor @model {
    id: ID! @isUnique
    user: User! @relation(name: "DoctorUser")
}

type Report @model {
    id: ID! @isUnique
    createdAt: DateTime!
    updatedAt: DateTime!
    patient: Patient! @relation(name: "PatientReport")
}

type MapItem @model {
    id: ID! @isUnique
    createdAt: DateTime!
    updatedAt: DateTime!
}
